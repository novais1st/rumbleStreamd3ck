from django.db import models

class Usuario(models.Model):
    id_usuario = models.AutoField(primary_key=True)
    nome = models.CharField(max_length=255)
    email = models.EmailField(unique=True)
    telefone = models.CharField(max_length=20, blank=True, null=True)
    senha = models.CharField(max_length=128)
    created_at = models.DateTimeField(auto_now_add=True)
    edited_at = models.DateTimeField(auto_now=True)
    deleted_at = models.DateTimeField(blank=True, null=True)

    def cadastrar_botao(self):
        pass

    def editar_botao(self):
        pass

    def desativar_botao(self):
        pass

    def criar_deck(self):
        pass

    def editar_deck(self):
        pass

    def desativar_deck(self):
        pass

    def cadastrar_sub_user(self):
        pass

    def editar_sub_user(self):
        pass

    def excluir_sub_user(self):
        pass

    def __str__(self):
        return self.nome

class Deck(models.Model):
    id_deck = models.AutoField(primary_key=True)
    nome = models.CharField(max_length=255)
    usuario = models.ForeignKey(Usuario, related_name='decks', on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    edited_at = models.DateTimeField(auto_now=True)
    deleted_at = models.DateTimeField(blank=True, null=True)

    def editar_deck_botoes(self):
        pass

    def __str__(self):
        return self.nome

class Botao(models.Model):
    id_botao = models.AutoField(primary_key=True)
    tipo = models.CharField(max_length=50)
    nome_or = models.CharField(max_length=255)
    nome_label = models.CharField(max_length=255)
    usuario = models.ForeignKey(Usuario, related_name='botoes', on_delete=models.CASCADE)
    volume = models.IntegerField()
    created_at = models.DateTimeField(auto_now_add=True)
    edited_at = models.DateTimeField(auto_now=True)
    deleted_at = models.DateTimeField(blank=True, null=True)

    def play(self):
        pass

    def pause(self):
        pass

    def alterar_label(self):
        pass

    def alterar_volume(self):
        pass

    def __str__(self):
        return self.nome_label

class SubUser(models.Model):
    id_sub = models.AutoField(primary_key=True)
    nome = models.CharField(max_length=255)
    senha = models.CharField(max_length=128)
    usuario = models.ForeignKey(Usuario, related_name='sub_usuarios', on_delete=models.CASCADE)
    allowed_decks = models.ManyToManyField(Deck, related_name='allowed_subusers')
    created_at = models.DateTimeField(auto_now_add=True)
    edited_at = models.DateTimeField(auto_now=True)
    deleted_at = models.DateTimeField(blank=True, null=True)

    def __str__(self):
        return self.nome
